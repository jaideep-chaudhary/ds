let arr = [2,4,6,8]
let result = []
let target = 8

arr.sort()

const combination = (index, arr, target, temp) => {
    
    // backtracking case
    
    if (target < 0) return
    
    // base case
    if (target == 0) {
        result.push(temp.slice())
    }
    
    // dfs case
    
    for (let j = index; j < arr.length; j++) {
        temp.push(arr[j])
        combination(j, arr, target - arr[j], temp)
        temp.pop()
        
    }
}

combination(0, arr, target, [])
console.log(result)
